name: Test Front build workflow # workflow 이름

on:  # workflow 실행 조건
  push:
    branches:
      - main # 메인 브랜치가 푸쉬된 경우


jobs: # job 설정
  test: # job id
    name: Hello test job! # job 이름
    runs-on: ubuntu-20.04 # job 가상환경
    steps:
      - name: check ls
        run: ls -al # checkout 하기전 확인
      - name: checkout Github Action # step 이름
        uses: actions/checkout@v3 # github actions 가상 환경에 해당 레포 소스 가져오기
      - name: after actions/checkout ls
        run: ls -al # checkout 후 확인
      - name: job - test echo 
        run: echo "Hello test job!"

  build: # job id
    needs: test
    name: Hello build job!
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./fe # 기본 워킹 디렉토리 설정
    steps: 
      - name: checkout Github Action # step 이름
        uses: actions/checkout@v3 # github actions 가상 환경에 해당 레포 소스 가져오기

    # cache : https://github.com/actions/cache/blob/main/examples.md#node---npm
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: install npm dependencies
        run: npm install
      - name: react build
        run: npm run build

      - name: Configure AWS credentials 
        uses: aws-actions/configure-aws-credentials@v1 
        with: 
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }} 
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_ID }} 
          aws-region: ap-northeast-2

      - name: Upload to S3
        env:
          BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME}}
        run: |
          aws s3 sync \
            ./build s3://$BUCKET_NAME

      - name: CloudFront Invalidation
        env:
          CLOUD_FRONT_ID: ${{ secrets.AWS_CLOUDFRONT_ID}}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id $CLOUD_FRONT_ID --paths /*
